---
import { useStoryblokApi } from "@storyblok/astro";
import LinkResolver from "./LinkResolver.astro";
import DynamicHamburgerIcon from "./DynamicHamburgerIcon.astro";
import Logo from "./Logo.astro";

const storyblokApi = useStoryblokApi();

// Use `version: "draft"` as I personally fins inconvenient
// to have staged config revisions in Storyblok.
const { data } = await storyblokApi.get("cdn/stories/config", {
  version: "draft",
  resolve_links: "url",
});

const navbarLinks = data?.story?.content?.navbar_links;

/*
  Note for future me, after trying to reduce the usage of AlpineJS.

  <details> doesn't make an accessible menu.
    - https://cloudfour.com/thinks/a-details-element-as-a-burger-menu-is-not-accessible/
    - https://daverupert.com/2019/12/why-details-is-not-an-accordion/

        For what it's worth, not even an accordion.

    So the following are not good ideas:
      - https://github.com/github/details-menu-element
      - https://css-tricks.com/using-details-for-menus-and-dialogs-is-an-interesting-idea/

  Adhere to the principle that "JavaScript is not evil". Web components and <dialog> do use
    and need Javascript.

  <dialog> is a viable choice but it doesn't offer the same amount of control when it
    comes to styling.
    
    Also the component styling is inconsistent on Chrome vs Firefox.

    - e.g. `dialog::back-drop { --myColor: #FFF; background-color: var(--myColor); }` on Chrome, results in
      the default 10% opacity from `dialog:-internal-dialog-in-top-layer::backdrop` still
      being applied.

      As of 2024-01-01, I don't feel confident in using it for this usecase.
*/
---

<div class="section navigation">
  <nav
    class="navbar full-width"
    aria-label="Main navigation"
    :aria-expanded="navbarOpen"
    x-on:keydown.escape="navbarOpen = false"
    x-data="{ navbarOpen: false }"
  >
    <a class="navbar-logo" href="/" aria-label="Website's Homepage">
      <Logo style="max-height: 1.25rem; max-width: 100%;" />
    </a>

    <button
      class="navbar-button"
      @click="navbarOpen = !navbarOpen"
      :aria-expanded="navbarOpen"
      :aria-label="! navbarOpen ? 'Open Navigation Menu' : 'Close Navigation Menu'"
    >
      <DynamicHamburgerIcon :class="navbarOpen ? 'close-icon' : ''" />
      <span x-text="! navbarOpen ? 'Menu' : 'Close'">Menu</span>
    </button>
    <ul class="navbar-links-wrapper" :class="navbarOpen ? 'open' : ''">
      {
        navbarLinks &&
          navbarLinks.map((l: any) => (
            <li>
              <LinkResolver linkBlock={l} />
            </li>
          ))
      }
    </ul>
  </nav>
</div>

<style>
  .navigation {
    padding: 0;
  }

  .navbar {
    display: flex;
    justify-content: space-between;
    height: var(--s-2xl);
    align-items: center;
    margin: var(--s-md);
  }

  .navbar-logo {
    display: inline-grid;
    justify-content: center;
    align-content: center;
    padding: var(--s-sm) var(--s-md);
  }

  .navbar-button {
    text-transform: uppercase;
    border-radius: 0;
    padding-left: var(--s-xl);
    padding-right: var(--s-xl);

    background-color: transparent;
    color: var(--color-neutral-800);

    &:hover {
      background-color: var(--color-neutral-300);
    }
  }

  .navbar-links-wrapper {
    display: flex;
    position: fixed;
    z-index: 100;

    flex-direction: column;
    justify-content: center;
    
    /* WORKAROUND: Make it scroll horizontally for now.
    A lot of things have been already refactored. */
    flex-wrap: wrap;

    top: var(--s-3xl);
    left: 0;
    right: 0;

    background-color: var(--color-neutral-100);

    height: 0;
    transition-property: all;
    transition-timing-function: var(--a-easeOut);
    transition-duration: var(--a-duration-fast);

    visibility: hidden;
    overflow: auto;

    padding: 0;

    /* Optical center the content, taking in account navbar height  */
    box-sizing: border-box;
    border-bottom: calc(var(--s-3xl) + var(--s-xs)) solid transparent;

    & > li {
      text-align: center;
      font-size: 1.52em;
      list-style-type: none;
      padding: 1rem;
    }

    &.open {
      height: calc(100dvh - var(--s-3xl));  /* Match navbar height */
      visibility: visible;
      transition-duration: var(--a-duration-brisk);
    }
  }

  @media (width < 767px) {
    .navbar-logo {
      padding: var(--s-sm) 0;
    }
  }
</style>
