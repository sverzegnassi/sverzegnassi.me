---
import { storyblokEditable } from "@storyblok/astro";
import DetailsBox from "../components/DetailsBox.astro";
import StoryblokImage from "../components/StoryblokImage.astro";
import LinkResolver from "../components/LinkResolver.astro";
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";

const { blok } = Astro.props;
---

<div class="section not-prose header-wrapper" {...storyblokEditable(blok)}>
  <header class="full-width">
    <div class="header-grid">
      <div class="header-card">
        <div class="el">
          <h1>{blok.title}</h1>
          {blok.description && <p class="text-small">{blok.description}</p>}
        </div>

        {
          blok.urls && (
            <div class="header-links">
              {blok.urls.map((l: any) => (
                <LinkResolver linkBlock={l} />
              ))}
            </div>
          )
        }
      </div>
      {
        blok.cover_image.filename && (
          <div class="cover-image">
            <StoryblokImage
              url={blok.cover_image.filename}
              alt={blok.cover_image.alt}
              lazyload={false}
              maxWidth={768}
              fitCover={true}
            />
          </div>
        )
      }
    </div>
    <div class="details"><DetailsBox blok={blok} /></div>
  </header>
</div>

<style>
  .header-wrapper {
    padding-top: 0;
    padding-bottom: 0;
  }

  .header-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
  }

  .header-card {
    background-color: var(--color-neutral-200);
    grid-column: 1 / 2;
    grid-row: 1 / 2;

    display: flex;
    flex-direction: column;
    justify-content: center;
    min-height: 43vh;
    padding: 1rem;

    & > .el {
      margin-bottom: 6rem;
    }

    & > .header-links {
      display: flex;
      column-gap: 1rem;
    }
  }

  .cover-image {
    grid-column: 2 / 3;
    grid-row: span 1;
  }

  .details {
    padding-top: 3rem;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }

  .content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    column-gap: 3rem;
  }

  .multimedia {
    display: block;

    & > * {
      width: 100%;
      height: auto;
      border: 1px solid var(--color-neutral-200);
    }
  }

  /* Values from Webflow */
  /* Tablet: < 991px; Mobile landscape: < 767px; mobile portrait < 478px */
  @media (width < 991px) {
    .content {
      grid-template-columns: 1fr;
    }

    .multimedia {
      order: 0;
    }

    .prose {
      order: 1;
    }

    .header-card {
      padding: 1.5rem;
    }
  }

  @media (width < 767px) {
    .cover-image {
      grid-column: 1 / 3;
      grid-row: span 1;
      order: 0;
    }

    .header-card {
      order: 2;
      grid-column: 1 / 3;
      grid-row: span 1;

      & > .el {
        margin-bottom: 1.5rem;
      }
    }
  }

  @media (width < 478px) {
    .header-card .el {
      margin-bottom: 3rem;
    }

    .details {
      padding-top: 1.5rem !important;
      padding-left: 0.75rem !important;
      padding-right: 0.75rem !important;
    }
  }
</style>

<style is:inline>
  @media (width < 991px) {
    /* WORKAROUND: This needs to stay inline, since <LinkResolver /> is an
    Astro component, and it doesn't get parsed properly
    during CSS optimization. */

    .header-links {
      flex-direction: column;
      row-gap: 0.5rem;

      & > .button {
        justify-content: flex-start;
      }

      & > .button + a {
        padding: 0.75rem 1.5rem;
      }
    }
  }
</style>

{
  blok.blocks?.map((blok: any) => {
    console.log(blok);
    return <StoryblokComponent blok={blok} />;
  })
}
