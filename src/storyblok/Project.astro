---
import { storyblokEditable, renderRichText } from "@storyblok/astro";
import ArticleCard from "../components/ArticleCard.astro";
//import BackToHomePage from "../components/BackToHomePage.astro";
import DetailsBox from "../components/DetailsBox.astro";
import StoryblokImage from "../components/StoryblokImage.astro";

const { blok } = Astro.props;
const renderedRichText = renderRichText(blok.content);
---

<div class="section" {...storyblokEditable(blok)}>
  <header class="full-width">
    <!--
    <BackToHomePage text="Return to the home page" href="/" />
     -->
    <div class="header-wrapper">
      <div class="card">
        <ArticleCard
          mainHeader={true}
          title={blok.title}
          description={blok.description}
          linkHref={blok.urls[0]?.link.url}
          linkText={blok.urls[0]?.title}
          isLinkExternal="true"
        />
      </div>
      {
        blok.cover_image.filename && (
          <div class="cover-image">
            <StoryblokImage
              url={blok.cover_image.filename}
              alt={blok.cover_image.alt}
              lazyload={false}
              maxWidth={768}
              fitCover={true}
            />
          </div>
        )
      }
    </div>
    <div class="details"><DetailsBox blok={blok} /></div>
  </header>
</div>

<div class="section">
  <div class="content">
    <div class="prose" set:html={renderedRichText} />

    <div class="multimedia">
      {
        blok.multimedia.map((img: any) => (
          <StoryblokImage url={img.filename} alt={img.alt} lazyload={true} maxWidth={1024} />
        ))
      }
    </div>
  </div>
</div>

<script defer>
  document.addEventListener("DOMContentLoaded", function () {
    var proseElement = document.querySelector(".prose");

    if (proseElement) {
      var anchorElements = proseElement.querySelectorAll("a");
      anchorElements.forEach(function (anchor) {
        var href = anchor.href;

        if (href.startsWith("http://") || href.startsWith("https://")) {
          anchor.rel = "nofollow noopener";

          var labelText = anchor.textContent?.trim();
          anchor.setAttribute("aria-label", labelText + " (external link: opens in a new window)");

          // Append an SVG icon to the anchor element
          /* HeroIcons
           *   - URL: https://heroicons.com/
           *   - Source Code: https://github.com/tailwindlabs/heroicons
           *   - License: MIT
           */
          var svgIcon = document.createElementNS("http://www.w3.org/2000/svg", "svg");
          svgIcon.setAttribute("fill", "none");
          svgIcon.setAttribute("viewBox", "0 0 24 24");
          svgIcon.setAttribute("stroke-width", "1.5");
          svgIcon.setAttribute("stroke", "currentColor");

          svgIcon.innerHTML =
            '<path stroke-linecap="round" stroke-linejoin="round" d="M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25" />';

          anchor.appendChild(svgIcon);
        }
      });
    }
  });
</script>

<style>
  .header-wrapper {
    display: grid;
    grid-template-columns: 1fr 1fr;
  }

  .card {
    grid-column: 1 / 2;
    grid-row: 1 / 2;
  }

  .cover-image {
    grid-column: 2 / 3;
    grid-row: span 1;
  }

  .details {
    padding-top: 2rem;
  }

  .content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    column-gap: 4rem;
  }

  .multimedia {
    display: block;

    & > * {
      width: 100%;
      height: auto;
      border: 1px solid var(--color-neutral-200);
    }
  }

  /* Values from Webflow */
  /* Tablet: < 991px; Mobile landscape: < 767px; mobile portrait < 478px */
  @media (width < 991px) {
    .content {
      grid-template-columns: 1fr;
    }

    .multimedia {
      order: 0;
    }

    .prose {
      order: 1;
    }
  }

  @media (width < 767px) {
    .card {
      grid-column: span 1;
      grid-row: span 1;
    }
  }

  @media (width < 478px) {
    .cover-image {
      grid-column: span 2;
      grid-row: span 1;
    }

    .card {
      order: 1;
      grid-column: span 2;
    }

    .cover-image {
      order: 0;
    }
  }
</style>

<style is:inline>
  .card {
    min-height: 43vh;

    & > * {
      height: 100%;
    }
  }
</style>
