---
import { storyblokEditable } from "@storyblok/astro";
import LinkResolver from "../components/LinkResolver.astro";

const { blok } = Astro.props;
---

<section {...storyblokEditable(blok)}>
  <div class="hero-content full-width not-prose">
    <h1 class="hero-title">
      {blok.title}<span class="caret" aria-hidden="true">_</span>
    </h1>
    <p class="hero-tag">{blok.tagline}</p>

    {
      blok.links && (
        <div class="hero-links">
          {blok.links.map((l: any) => (
            <LinkResolver linkBlock={l} />
          ))}
        </div>
      )
    }
  </div>
</section>

<style>
  section {
    padding: 0;
    position: relative;
  }

  .hero-content {
    margin: var(--s-2xl);
    padding-top: 15dvh;
    padding-bottom: var(--s-xl);

    & > * {
      max-width: var(--max-line-length);
    }
  }

  .hero-title {
    display: inline-block;
    margin-bottom: var(--s-md);
    color: var(--color-neutral-800);
  }

  @media (width < 767px) {
    .hero-content {
      margin: var(--s-xl);
    }
  }

  .hero-links {
    display: flex;
    gap: var(--s-xl);
    margin-top: var(--s-xl);
  }

  .caret {
    color: var(--color-neutral-500);
    padding-left: 0.12ch;
  }
</style>

<script is:inline src="/gsap/minified/gsap.min.js" defer></script>
<script is:inline defer>
  window.addEventListener("load", () => {
    let mm = gsap.matchMedia();
    let slowDuration = gsap.getProperty("html", "--a-gsap-slow");

    mm.add("(prefers-reduced-motion: no-preference)", () => {
      var tl = gsap.timeline({ repeat: 0 });
      tl.from(".hero-title", { opacity: 0, translateX: -100, ease: "circ.out", duration: slowDuration });
      tl.from(".hero-tag", { opacity: 0, translateX: -50, ease: "circ.out", duration: slowDuration });
      tl.from(".hero-links", { opacity: 0, ease: "circ.out", duration: slowDuration });
      tl.fromTo(
        ".caret",
        { opacity: 0 },
        { opacity: 1, duration: slowDuration, ease: "expo.inOut", repeat: -1, yoyo: true },
      );
    });
  });
</script>
