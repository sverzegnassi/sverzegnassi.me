---
import { storyblokEditable } from "@storyblok/astro";
import LinkResolver from "../components/LinkResolver.astro";

const { blok } = Astro.props;
---

<section {...storyblokEditable(blok)}>
  <div class="hero-content full-width not-prose">
    <h1 class="hero-title">
      {blok.title}<span class="caret" aria-hidden="true">_</span>
    </h1>
    <p class="hero-tag">{blok.tagline}</p>

    {
      blok.links && (
        <div class="hero-links">
          {blok.links.map((l: any) => (
            <LinkResolver linkBlock={l} />
          ))}
        </div>
      )
    }
  </div>
</section>

<style>
  section {
    padding: 0;
    position: relative;
  }

  .hero-content {
    margin: 3rem;
    padding-top: 9rem;
    padding-bottom: 1.5rem;

    & > * {
      max-width: 60ch;
    }
  }

  .hero-title {
    display: inline-block;
    margin-bottom: 1.5rem;
    color: var(--color-neutral-800);
  }

  @media (width < 767px) {
    .hero-content {
      padding-top: 6rem;
    }
  }

  .hero-links {
    margin-top: 1.5rem;
  }
</style>

<style is:inline>
  .caret {
    color: var(--color-neutral-500);
    opacity: 0;
    padding-left: 0.12ch;
  }
</style>

<script is:inline src="/gsap/minified/gsap.min.js" defer></script>
<script is:inline defer>
  window.addEventListener("load", (event) => {
    var tl = gsap.timeline({ repeat: 0 });
    tl.from(".hero-title", { opacity: 0, translateY: 100, duration: 1 });
    tl.from(".hero-tag", { opacity: 0, translateY: 50, duration: 0.5 });
    tl.from(".hero-links", { opacity: 0, translateY: 50, duration: 0.5 }, "-=0.5");
    tl.fromTo(".caret", { opacity: 0 }, { opacity: 1, duration: 0.5, ease: "expo.inOut", repeat: -1, yoyo: true });
  });
</script>
